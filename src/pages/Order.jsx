import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./Order.css";

export default function Order() {
  const navigate = useNavigate();
  const basePrice = 85.5;
  const toppingPrice = 5;

  const [formData, setFormData] = useState({
    name: "",
    size: "",
    dough: "",
    toppings: [],
    notes: "",
    quantity: 1,
  });

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;

    if (type === "checkbox") {
      setFormData((prev) => ({
        ...prev,
        toppings: checked
          ? [...prev.toppings, value]
          : prev.toppings.filter((t) => t !== value),
      }));
    } else {
      setFormData((prev) => ({ ...prev, [name]: value }));
    }
  };

  const handleQuantity = (type) => {
    setFormData((prev) => {
      let newQty = type === "increase" ? prev.quantity + 1 : prev.quantity - 1;
      if (newQty < 1) newQty = 1;
      return { ...prev, quantity: newQty };
    });
  };

  const handleSubmit = (e) => {
  e.preventDefault();

  const orderData = {
    name: formData.name,
    size: formData.size,
    dough: formData.dough,
    toppings: formData.toppings,
    notes: formData.notes,
    quantity: formData.quantity,
    totalPrice: totalPrice.toFixed(2), // ğŸ”´ toplam tutarÄ± ekledik
  };

  console.log("SipariÅŸ Verildi:", orderData);

  navigate("/success", { state: orderData });
};


  const selectedToppingsPrice = formData.toppings.length * toppingPrice;
  const totalPrice = (basePrice + selectedToppingsPrice) * formData.quantity;

  return (
    <form className="order-form" onSubmit={handleSubmit}>
      <h1>Position Absolute AcÄ± Pizza</h1>
      <div className="pizza-meta">
        <span className="price">{basePrice.toFixed(2)}â‚º</span>
        <span className="rating"> 4.9 (200)</span>
      </div>
      <p className="desc">
        FrontEnd Dev olarak hala position:absolute kullanÄ±yorsan bu Ã§ok acÄ± pizza tam sana gÃ¶re. Pizza, domates, peynir ve genellikle Ã§eÅŸitli diÄŸer malzemelerle kaplanmÄ±ÅŸ, daha sonra geleneksel olarak odun ateÅŸinde bir fÄ±rÄ±nda yÃ¼ksek sÄ±caklÄ±kta piÅŸirilen, genellikle yuvarlak, dÃ¼zleÅŸtirilmiÅŸ mayalÄ± buÄŸday bazlÄ± hamurdan oluÅŸan Ä°talyan kÃ¶kenli lezzetli bir yemektir. KÃ¼Ã§Ã¼k bir pizzaya bazen pizzetta denir.
      </p>

      {/* âœ… Boyut ve Hamur SeÃ§ yan yana */}
      <div className="form-row">
        <div className="form-group">
          <label>Boyut SeÃ§<span>*</span></label>
          <div className="radio-group vertical">
            {["KÃ¼Ã§Ã¼k", "Orta", "BÃ¼yÃ¼k"].map((size) => (
              <label key={size}>
                <input
                  type="radio"
                  name="size"
                  value={size}
                  onChange={handleChange}
                  required
                />
                {size}
              </label>
            ))}
          </div>
        </div>

        <div className="form-group">
          <label>Hamur SeÃ§<span>*</span></label>
          <select name="dough" value={formData.dough} onChange={handleChange} required>
            <option value="">Hamur KalÄ±nlÄ±ÄŸÄ± SeÃ§</option>
            <option value="Ä°nce">Ä°nce</option>
            <option value="Orta">Orta</option>
            <option value="KalÄ±n">KalÄ±n</option>
          </select>
        </div>
      </div>

      {/* âœ… Ek Malzemeler */}
      <div className="form-group">
        <label>Ek Malzemeler</label>
        <p className="topping-limit">En fazla 10 malzeme seÃ§ebilirsiniz. <strong>5â‚º</strong></p>
        <div className="checkbox-group">
          {[
            "Pepperoni", "Sosis", "Kanada Jambonu", "Tavuk Izgara", "SoÄŸan",
            "Domates", "MÄ±sÄ±r", "Sucuk", "Jalepeno", "SarÄ±msak", "Biber", "Ananas", "Kabak"
          ].map((topping) => (
            <label key={topping}>
              <input
                type="checkbox"
                name="toppings"
                value={topping}
                checked={formData.toppings.includes(topping)}
                onChange={handleChange}
                disabled={
                  !formData.toppings.includes(topping) &&
                  formData.toppings.length >= 10
                }
              />
              {topping}
            </label>
          ))}
        </div>
      </div>

      {/* âœ… Notlar */}
      <div className="form-group">
        <label>SipariÅŸ Notu</label>
        <textarea
          name="notes"
          value={formData.notes}
          onChange={handleChange}
          placeholder="SipariÅŸine eklemek istediÄŸin bir not var mÄ±?"
        ></textarea>
      </div>

      {/* âœ… SipariÅŸ Ã–zeti */}
      <div className="order-summary">
        <div className="adet-group">
          <label>Adet:</label>
          <div className="quantity-buttons">
            <button type="button" onClick={() => handleQuantity("decrease")}>-</button>
            <span>{formData.quantity}</span>
            <button type="button" onClick={() => handleQuantity("increase")}>+</button>
          </div>
        </div>

        <div className="summary">
          <p>SeÃ§imler: <strong>{selectedToppingsPrice.toFixed(2)}â‚º</strong></p>
          <p>SipariÅŸ ToplamÄ±: <strong>{totalPrice.toFixed(2)}â‚º</strong></p>
        </div>

        <button className="order-button" type="submit">SipariÅŸ Ver</button>
      </div>
    </form>
  );
}
